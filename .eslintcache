[{"/Users/vlad/columbia/homework/20-react-portfolio/src/index.js":"1","/Users/vlad/columbia/homework/20-react-portfolio/src/App.js":"2","/Users/vlad/columbia/homework/20-react-portfolio/src/components/Contact.js":"3","/Users/vlad/columbia/homework/20-react-portfolio/src/components/Nav.js":"4","/Users/vlad/columbia/homework/20-react-portfolio/src/components/About.js":"5","/Users/vlad/columbia/homework/20-react-portfolio/src/components/Banner.js":"6"},{"size":147,"mtime":1608445623791,"results":"7","hashOfConfig":"8"},{"size":240,"mtime":1608538260295,"results":"9","hashOfConfig":"8"},{"size":183,"mtime":1608445131220,"results":"10","hashOfConfig":"8"},{"size":1049,"mtime":1608540182579,"results":"11","hashOfConfig":"8"},{"size":2008,"mtime":1608460455301,"results":"12","hashOfConfig":"8"},{"size":1405,"mtime":1608547545736,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"15cgzu3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vlad/columbia/homework/20-react-portfolio/src/index.js",[],["28","29"],"/Users/vlad/columbia/homework/20-react-portfolio/src/App.js",[],"/Users/vlad/columbia/homework/20-react-portfolio/src/components/Contact.js",[],"/Users/vlad/columbia/homework/20-react-portfolio/src/components/Nav.js",["30","31"],"import React, { useState } from 'react';\n\nconst Nav = () => {\n    const [state, setState] = useState(true);\n    return ( \n        <nav className='navbar'>\n            <div className='container'>\n                <div className='navbar_container'>\n{/*=== NAVBAR LEFT ==================================================== */}\n                    <ul className='navbar_left'>\n                        <div className='navbar_left-logo'>\n                            <img src='/images/logo.png' alt='logo' />\n                        </div>\n                    </ul>\n{/* === NAVBAR RIGHT ================================================== */}\n                    <ul className='navbar_right'>\n                        <li><a href='#home'>Home</a></li>\n                        <li><a href='#about'>About</a></li>\n                        <li><a href='#portfolio'>Portfolio</a></li>\n                        <li><a href='#contact'>Contact</a></li>\n                    </ul>\n                </div>\n\n            </div>\n        </nav>\n     );\n};\n \nexport default Nav;","/Users/vlad/columbia/homework/20-react-portfolio/src/components/About.js",[],"/Users/vlad/columbia/homework/20-react-portfolio/src/components/Banner.js",["32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":4,"column":12,"nodeType":"39","messageId":"40","endLine":4,"endColumn":17},{"ruleId":"37","severity":1,"message":"41","line":4,"column":19,"nodeType":"39","messageId":"40","endLine":4,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":22,"column":37,"nodeType":"44","endLine":22,"endColumn":76},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'setState' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]